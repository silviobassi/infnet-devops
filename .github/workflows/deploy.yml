name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      VERSION_BUMP:
        description: "Escolha o incremento da versão (patch, minor, major)"
        required: true
        default: "patch"

permissions:
  contents: write  # Dá permissão para criar tags no repositório

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build da aplicação com Maven
        run: ./mvnw clean package -DskipTests

      - name: Obter a última versão da imagem
        run: |
          LATEST_VERSION=$(git tag --sort=-v:refname | head -n 1)
          
          if [[ -z "$LATEST_VERSION" ]]; then
            NEW_VERSION="1.0.0"
          else
            MAJOR=$(echo $LATEST_VERSION | cut -d. -f1)
            MINOR=$(echo $LATEST_VERSION | cut -d. -f2)
            PATCH=$(echo $LATEST_VERSION | cut -d. -f3)
          
            case "${{ github.event.inputs.VERSION_BUMP }}" in
              "major")
                MAJOR=$((MAJOR + 1))
                MINOR=0
                PATCH=0
                ;;
              "minor")
                MINOR=$((MINOR + 1))
                PATCH=0
                ;;
              "patch")
                PATCH=$((PATCH + 1))
                ;;
              *)
                echo "Opção inválida para VERSION_BUMP, usando patch por padrão"
                PATCH=$((PATCH + 1))
                ;;
            esac

            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          fi

          echo "IMAGE_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Configurar credenciais do Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Criar tag no repositório
        run: |
          git tag $IMAGE_VERSION
          git push origin $IMAGE_VERSION

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build da imagem Docker
        run: docker build -t silviobassi/app-course:${{ env.IMAGE_VERSION }} .

      - name: Push da imagem para o Docker Hub
        run: docker push silviobassi/app-course:${{ env.IMAGE_VERSION }}

      - name: Atualizar tag latest (opcional)
        run: |
          docker tag silviobassi/app-course:${{ env.IMAGE_VERSION }} silviobassi/app-course:latest
          docker push silviobassi/app-course:latest
